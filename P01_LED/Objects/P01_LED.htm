<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\P01_LED.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\P01_LED.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6190004: Last Updated: Tue Aug 29 13:52:37 2023
<BR><P>
<H3>Maximum Stack Usage =         88 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
SystemInit &rArr; SCU_ClkInit &rArr; SCU_toggleAPCLK_SET &rArr; SCU_ClosePASSWD &rArr; Field_Wrt8all
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[1d]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">SVC_Handler_main</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">SVC_Handler_main</a><BR>
 <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[d]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">ADC1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[d]">ADC1_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[c]">ADC2_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[18]">BDRV_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from isr.o(.text.BusFault_Handler) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[e]">CCU6SR0_IRQHandler</a> from isr.o(.text.CCU6SR0_IRQHandler) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[f]">CCU6SR1_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[10]">CCU6SR2_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[11]">CCU6SR3_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[19]">DMA_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[16]">EXINT0_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[17]">EXINT1_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[a]">GPT1_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[b]">GPT2_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from isr.o(.text.HardFault_Handler) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from isr.o(.text.MemManage_Handler) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[12]">SSC1_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[13]">SSC2_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[1c]">SVC_Handler_main</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(.text)
 <LI><a href="#[9]">SysTick_Handler</a> from isr.o(.text.SysTick_Handler) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[1a]">SystemInit</a> from system_tle987x.o(.text.SystemInit) referenced from startup_tle987x.o(.text)
 <LI><a href="#[14]">UART1_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[15]">UART2_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from isr.o(.text.UsageFault_Handler) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[1b]">__main</a> from __main.o(!!!main) referenced from startup_tle987x.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1b]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(.text)
</UL>
<P><STRONG><a name="[1e]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[20]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[4f]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[50]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[51]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[24]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[52]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[53]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[54]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[55]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[56]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000034))

<P><STRONG><a name="[57]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[58]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[59]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[5a]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[5b]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[5c]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[5d]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[5e]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[5f]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[60]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[61]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[62]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000010))

<P><STRONG><a name="[63]"></a>__rt_lib_init_relocate_pie_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[64]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000035))

<P><STRONG><a name="[65]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[66]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000027))

<P><STRONG><a name="[67]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[29]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[68]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[69]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[6a]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[6b]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[6c]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[6d]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[6e]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[1f]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[6f]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[21]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[23]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[70]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[25]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; TLE_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[71]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[2d]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[28]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[72]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[2a]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SVC_Handler_main</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler_main
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler_main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(.text)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>ADC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>BDRV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>CCU6SR1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>CCU6SR2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>CCU6SR3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EXINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>GPT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>GPT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>SSC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>SSC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_tle987x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[73]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[74]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[75]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[22]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[27]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[76]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[77]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[78]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[79]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[7a]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(.text.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>CCU6SR0_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, isr.o(.text.CCU6SR0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>INT_Init</STRONG> (Thumb, 268 bytes, Stack size 0 bytes, int.o(.text.INT_Init))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_Init
</UL>

<P><STRONG><a name="[4b]"></a>LIN_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lin.o(.text.LIN_Init))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_Init
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(.text.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>PMU_Init</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, pmu.o(.text.PMU_Init))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_Init
</UL>

<P><STRONG><a name="[4c]"></a>PORT_Init</STRONG> (Thumb, 240 bytes, Stack size 0 bytes, port.o(.text.PORT_Init))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_Init
</UL>

<P><STRONG><a name="[3e]"></a>SCU_ClkInit</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, scu.o(.text.SCU_ClkInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SCU_ClkInit &rArr; SCU_toggleAPCLK_SET &rArr; SCU_ClosePASSWD &rArr; Field_Wrt8all
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMSIS_Irq_En
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClosePASSWD
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_OpenPASSWD
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_toggleAPCLK_SET
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Wrt8all
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setfSYStofPLL
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setNormalMode
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_waitForPllLock
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_resetPllLockDetection
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setVcoselK2divFromConfigWizard
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setNdivFromConfigWizard
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setOscTrim
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setPrescalerMode
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setK1divToOne
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setfSYStoLPCLK
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Mod8
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMSIS_Irq_Dis
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[49]"></a>SCU_Init</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, scu.o(.text.SCU_Init))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_Init
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, isr.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SysTick_Handler &rArr; Task_1ms &rArr; PORT_P01_Output_Toggle_Set &rArr; Field_Inv8
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT1_Window_Count
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_1ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>SysTick_Init</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, wdt1.o(.text.SysTick_Init))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[1a]"></a>SystemInit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, system_tle987x.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SystemInit &rArr; SCU_ClkInit &rArr; SCU_toggleAPCLK_SET &rArr; SCU_ClosePASSWD &rArr; Field_Wrt8all
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT1_Init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(.text)
</UL>
<P><STRONG><a name="[48]"></a>TLE_Init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, tle_device.o(.text.TLE_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TLE_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_Init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMU_Init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIN_Init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[44]"></a>Task_1ms</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, main.o(.text.Task_1ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Task_1ms &rArr; PORT_P01_Output_Toggle_Set &rArr; Field_Inv8
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_P01_Output_Toggle_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(.text.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>WDT1_Init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, wdt1.o(.text.WDT1_Init))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[4e]"></a>WDT1_Service</STRONG> (Thumb, 96 bytes, Stack size 4 bytes, wdt1.o(.text.WDT1_Service))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = WDT1_Service
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = main &rArr; TLE_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT1_Service
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[3c]"></a>PORT_P01_Output_Toggle_Set</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, main.o(.text.PORT_P01_Output_Toggle_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PORT_P01_Output_Toggle_Set &rArr; Field_Inv8
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Inv8
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_1ms
</UL>

<P><STRONG><a name="[3d]"></a>Field_Inv8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, main.o(.text.Field_Inv8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Field_Inv8
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_P01_Output_Toggle_Set
</UL>

<P><STRONG><a name="[45]"></a>WDT1_Window_Count</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, isr.o(.text.WDT1_Window_Count))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[3f]"></a>CMSIS_Irq_Dis</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scu.o(.text.CMSIS_Irq_Dis))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
</UL>

<P><STRONG><a name="[2f]"></a>Field_Mod8</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, scu.o(.text.Field_Mod8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Field_Mod8
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_toggleAPCLK_SET
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setfSYStofPLL
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setNormalMode
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_resetPllLockDetection
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setOscTrim
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setPrescalerMode
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setK1divToOne
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setfSYStoLPCLK
</UL>

<P><STRONG><a name="[38]"></a>PLL_setfSYStoLPCLK</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, scu.o(.text.PLL_setfSYStoLPCLK))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PLL_setfSYStoLPCLK &rArr; SCU_ClosePASSWD &rArr; Field_Wrt8all
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClosePASSWD
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_OpenPASSWD
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Mod8
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
</UL>

<P><STRONG><a name="[30]"></a>PLL_setK1divToOne</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, scu.o(.text.PLL_setK1divToOne))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PLL_setK1divToOne &rArr; SCU_ClosePASSWD &rArr; Field_Wrt8all
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClosePASSWD
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_OpenPASSWD
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Mod8
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
</UL>

<P><STRONG><a name="[36]"></a>PLL_setPrescalerMode</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, scu.o(.text.PLL_setPrescalerMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PLL_setPrescalerMode &rArr; Field_Mod8
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Mod8
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
</UL>

<P><STRONG><a name="[35]"></a>PLL_setOscTrim</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, scu.o(.text.PLL_setOscTrim))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PLL_setOscTrim &rArr; SCU_ClosePASSWD &rArr; Field_Wrt8all
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClosePASSWD
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_OpenPASSWD
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Mod8
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
</UL>

<P><STRONG><a name="[33]"></a>PLL_setNdivFromConfigWizard</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, scu.o(.text.PLL_setNdivFromConfigWizard))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PLL_setNdivFromConfigWizard &rArr; SCU_ClosePASSWD &rArr; Field_Wrt8all
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClosePASSWD
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_OpenPASSWD
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
</UL>

<P><STRONG><a name="[37]"></a>PLL_setVcoselK2divFromConfigWizard</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, scu.o(.text.PLL_setVcoselK2divFromConfigWizard))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PLL_setVcoselK2divFromConfigWizard &rArr; SCU_ClosePASSWD &rArr; Field_Wrt8all
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClosePASSWD
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_OpenPASSWD
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
</UL>

<P><STRONG><a name="[2e]"></a>PLL_resetPllLockDetection</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, scu.o(.text.PLL_resetPllLockDetection))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PLL_resetPllLockDetection &rArr; Field_Mod8
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Mod8
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
</UL>

<P><STRONG><a name="[3a]"></a>PLL_waitForPllLock</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, scu.o(.text.PLL_waitForPllLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PLL_waitForPllLock &rArr; u1_Field_Rd8
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u1_Field_Rd8
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
</UL>

<P><STRONG><a name="[34]"></a>PLL_setNormalMode</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, scu.o(.text.PLL_setNormalMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PLL_setNormalMode &rArr; Field_Mod8
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Mod8
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
</UL>

<P><STRONG><a name="[39]"></a>PLL_setfSYStofPLL</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, scu.o(.text.PLL_setfSYStofPLL))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PLL_setfSYStofPLL &rArr; SCU_ClosePASSWD &rArr; Field_Wrt8all
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClosePASSWD
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_OpenPASSWD
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Mod8
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
</UL>

<P><STRONG><a name="[40]"></a>Field_Wrt8all</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, scu.o(.text.Field_Wrt8all))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Field_Wrt8all
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClosePASSWD
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_OpenPASSWD
</UL>

<P><STRONG><a name="[41]"></a>SCU_toggleAPCLK_SET</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, scu.o(.text.SCU_toggleAPCLK_SET))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SCU_toggleAPCLK_SET &rArr; SCU_ClosePASSWD &rArr; Field_Wrt8all
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMSIS_NOP
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClosePASSWD
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_OpenPASSWD
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Mod8
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
</UL>

<P><STRONG><a name="[31]"></a>SCU_OpenPASSWD</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, scu.o(.text.SCU_OpenPASSWD))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SCU_OpenPASSWD &rArr; Field_Wrt8all
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Wrt8all
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_toggleAPCLK_SET
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setfSYStofPLL
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setVcoselK2divFromConfigWizard
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setNdivFromConfigWizard
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setOscTrim
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setK1divToOne
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setfSYStoLPCLK
</UL>

<P><STRONG><a name="[32]"></a>SCU_ClosePASSWD</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, scu.o(.text.SCU_ClosePASSWD))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SCU_ClosePASSWD &rArr; Field_Wrt8all
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Wrt8all
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_toggleAPCLK_SET
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setfSYStofPLL
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setVcoselK2divFromConfigWizard
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setNdivFromConfigWizard
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setOscTrim
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setK1divToOne
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setfSYStoLPCLK
</UL>

<P><STRONG><a name="[42]"></a>CMSIS_Irq_En</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scu.o(.text.CMSIS_Irq_En))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
</UL>

<P><STRONG><a name="[3b]"></a>u1_Field_Rd8</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, scu.o(.text.u1_Field_Rd8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = u1_Field_Rd8
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_waitForPllLock
</UL>

<P><STRONG><a name="[43]"></a>CMSIS_NOP</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scu.o(.text.CMSIS_NOP))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_toggleAPCLK_SET
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
