<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\UART2_TTY.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\UART2_TTY.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6190004: Last Updated: Wed Aug 30 18:20:38 2023
<BR><P>
<H3>Maximum Stack Usage =         88 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
SystemInit &rArr; SCU_ClkInit &rArr; SCU_toggleAPCLK_SET &rArr; SCU_ClosePASSWD &rArr; Field_Wrt8all
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1d]">SVC_Handler_main</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">SVC_Handler_main</a><BR>
 <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[c]">ADC2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">ADC2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[d]">ADC1_IRQHandler</a> from isr.o(.text.ADC1_IRQHandler) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[c]">ADC2_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[18]">BDRV_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from isr.o(.text.BusFault_Handler) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[e]">CCU6SR0_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[f]">CCU6SR1_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[10]">CCU6SR2_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[11]">CCU6SR3_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[19]">DMA_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[16]">EXINT0_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[17]">EXINT1_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[a]">GPT1_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[b]">GPT2_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from isr.o(.text.HardFault_Handler) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from isr.o(.text.MemManage_Handler) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[12]">SSC1_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[13]">SSC2_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[1d]">SVC_Handler_main</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(.text)
 <LI><a href="#[9]">SysTick_Handler</a> from isr.o(.text.SysTick_Handler) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[1b]">SystemInit</a> from system_tle987x.o(.text.SystemInit) referenced from startup_tle987x.o(.text)
 <LI><a href="#[14]">UART1_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[15]">UART2_IRQHandler</a> from startup_tle987x.o(.text) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from isr.o(.text.UsageFault_Handler) referenced from startup_tle987x.o(RESET)
 <LI><a href="#[1c]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_tle987x.o(.text)
 <LI><a href="#[1e]">fputc</a> from retarget_io.o(.text.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[1a]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1c]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(.text)
</UL>
<P><STRONG><a name="[7b]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[1f]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2d]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[7c]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[7d]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[7e]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[7f]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[80]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SVC_Handler_main</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler_main
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler_main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(.text)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>ADC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>BDRV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>CCU6SR0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>CCU6SR1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>CCU6SR2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>CCU6SR3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EXINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>GPT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>GPT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>SSC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>SSC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[7a]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[21]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[82]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[24]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[28]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[29]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[2a]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2b]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2c]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[77]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[20]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[83]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[23]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[84]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[22]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[85]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[25]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[86]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[27]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[26]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[32]"></a>ADC1_GetEIMResult</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, adc1.o(.text.ADC1_GetEIMResult))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ADC1_GetEIMResult &rArr; u16_Field_Rd32
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u16_Field_Rd32
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u1_Field_Rd32
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_GetEIMResult_mV
</UL>

<P><STRONG><a name="[35]"></a>ADC1_GetEIMResult_mV</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, adc1.o(.text.ADC1_GetEIMResult_mV))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ADC1_GetEIMResult_mV &rArr; ADC1_GetEIMResult &rArr; u16_Field_Rd32
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_GetEIMResult
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8_Field_Rd32
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_VDH_Attenuator_Range_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Poti_Handler
</UL>

<P><STRONG><a name="[d]"></a>ADC1_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, isr.o(.text.ADC1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ADC1_IRQHandler &rArr; Poti_Handler &rArr; ADC1_GetEIMResult_mV &rArr; ADC1_GetEIMResult &rArr; u16_Field_Rd32
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_EIM_Int_Clr
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Poti_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>ADC1_Init</STRONG> (Thumb, 270 bytes, Stack size 16 bytes, adc1.o(.text.ADC1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ADC1_Init &rArr; ADC1_ANON_Set &rArr; Field_Mod32
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Power_On
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_ANON_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_Init
</UL>

<P><STRONG><a name="[63]"></a>ADC2_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, adc2.o(.text.ADC2_Init))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_Init
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(.text.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>CCU6_Init</STRONG> (Thumb, 224 bytes, Stack size 8 bytes, ccu6.o(.text.CCU6_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CCU6_Init &rArr; CCU6_T13_Str_En &rArr; Field_Wrt16
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU6_T13_Str_En
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU6_T12_Str_En
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_Init
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>INT_Init</STRONG> (Thumb, 272 bytes, Stack size 0 bytes, int.o(.text.INT_Init))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_Init
</UL>

<P><STRONG><a name="[64]"></a>LIN_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lin.o(.text.LIN_Init))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_Init
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(.text.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>PMU_Init</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, pmu.o(.text.PMU_Init))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_Init
</UL>

<P><STRONG><a name="[50]"></a>PORT_ChangePin</STRONG> (Thumb, 264 bytes, Stack size 32 bytes, port.o(.text.PORT_ChangePin))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PORT_ChangePin &rArr; Field_Inv8
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMSIS_Irq_En
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Inv8
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Mod8
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Clr8
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMSIS_Irq_Dis
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Poti_Handler
</UL>

<P><STRONG><a name="[67]"></a>PORT_Init</STRONG> (Thumb, 260 bytes, Stack size 0 bytes, port.o(.text.PORT_Init))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_Init
</UL>

<P><STRONG><a name="[38]"></a>Poti_Handler</STRONG> (Thumb, 356 bytes, Stack size 16 bytes, main.o(.text.Poti_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Poti_Handler &rArr; ADC1_GetEIMResult_mV &rArr; ADC1_GetEIMResult &rArr; u16_Field_Rd32
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ChangePin
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_GetEIMResult_mV
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>

<P><STRONG><a name="[56]"></a>SCU_ClkInit</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, scu.o(.text.SCU_ClkInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SCU_ClkInit &rArr; SCU_toggleAPCLK_SET &rArr; SCU_ClosePASSWD &rArr; Field_Wrt8all
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMSIS_Irq_En
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClosePASSWD
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_OpenPASSWD
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_toggleAPCLK_SET
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Wrt8all
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setfSYStofPLL
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setNormalMode
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_waitForPllLock
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_resetPllLockDetection
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setVcoselK2divFromConfigWizard
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setNdivFromConfigWizard
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setOscTrim
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setPrescalerMode
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setK1divToOne
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setfSYStoLPCLK
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Mod8
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMSIS_Irq_Dis
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[61]"></a>SCU_Init</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, scu.o(.text.SCU_Init))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_Init
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, isr.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT1_Window_Count
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_1ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>SysTick_Init</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, wdt1.o(.text.SysTick_Init))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[1b]"></a>SystemInit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, system_tle987x.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SystemInit &rArr; SCU_ClkInit &rArr; SCU_toggleAPCLK_SET &rArr; SCU_ClosePASSWD &rArr; Field_Wrt8all
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT1_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(.text)
</UL>
<P><STRONG><a name="[60]"></a>TLE_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, tle_device.o(.text.TLE_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TLE_Init &rArr; ADC1_Init &rArr; ADC1_ANON_Set &rArr; Field_Mod32
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Init
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU6_Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC2_Init
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_Init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMU_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIN_Init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>Task_1ms</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, main.o(.text.Task_1ms))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[65]"></a>UART1_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uart.o(.text.UART1_Init))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_Init
</UL>

<P><STRONG><a name="[66]"></a>UART2_Init</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, uart.o(.text.UART2_Init))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_Init
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(.text.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>WDT1_Init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, wdt1.o(.text.WDT1_Init))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[73]"></a>WDT1_SOW_Service</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, wdt1.o(.text.WDT1_SOW_Service))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = WDT1_SOW_Service
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stdout_putchar
</UL>

<P><STRONG><a name="[72]"></a>WDT1_Service</STRONG> (Thumb, 96 bytes, Stack size 4 bytes, wdt1.o(.text.WDT1_Service))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = WDT1_Service
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stdout_putchar
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e]"></a>fputc</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, retarget_io.o(.text.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = fputc &rArr; stdout_putchar &rArr; UART2_Send_Byte &rArr; UART2_Buffer_Set &rArr; Field_Wrt8
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stdout_putchar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[1a]"></a>main</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = main &rArr; TLE_Init &rArr; ADC1_Init &rArr; ADC1_ANON_Set &rArr; Field_Mod32
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT1_Service
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLE_Init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU6_StartTmr_T13
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[70]"></a>stdout_putchar</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, uart.o(.text.stdout_putchar))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = stdout_putchar &rArr; UART2_Send_Byte &rArr; UART2_Buffer_Set &rArr; Field_Wrt8
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_isByteTransmitted
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Send_Byte
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT1_SOW_Service
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT1_Service
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[74]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[87]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[88]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[89]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[71]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8a]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[8b]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[8c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[3e]"></a>CCU6_StartTmr_T13</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, main.o(.text.CCU6_StartTmr_T13))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CCU6_StartTmr_T13 &rArr; CCU6_T13_Start &rArr; Field_Wrt16
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU6_T13_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3f]"></a>CCU6_T13_Start</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, main.o(.text.CCU6_T13_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CCU6_T13_Start &rArr; Field_Wrt16
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Wrt16
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU6_StartTmr_T13
</UL>

<P><STRONG><a name="[41]"></a>Field_Wrt16</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, main.o(.text.Field_Wrt16))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Field_Wrt16
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU6_T13_Start
</UL>

<P><STRONG><a name="[30]"></a>ADC1_EIM_Int_Clr</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, isr.o(.text.ADC1_EIM_Int_Clr))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ADC1_EIM_Int_Clr &rArr; Field_Wrt32
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Wrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>

<P><STRONG><a name="[31]"></a>Field_Wrt32</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, isr.o(.text.Field_Wrt32))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Field_Wrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_EIM_Int_Clr
</UL>

<P><STRONG><a name="[5d]"></a>WDT1_Window_Count</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, isr.o(.text.WDT1_Window_Count))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[51]"></a>CMSIS_Irq_Dis</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, port.o(.text.CMSIS_Irq_Dis))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ChangePin
</UL>

<P><STRONG><a name="[52]"></a>Field_Clr8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, port.o(.text.Field_Clr8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Field_Clr8
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ChangePin
</UL>

<P><STRONG><a name="[53]"></a>Field_Mod8</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, port.o(.text.Field_Mod8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Field_Mod8
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ChangePin
</UL>

<P><STRONG><a name="[54]"></a>Field_Inv8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, port.o(.text.Field_Inv8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Field_Inv8
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ChangePin
</UL>

<P><STRONG><a name="[55]"></a>CMSIS_Irq_En</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, port.o(.text.CMSIS_Irq_En))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ChangePin
</UL>

<P><STRONG><a name="[57]"></a>CMSIS_Irq_Dis</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scu.o(.text.CMSIS_Irq_Dis))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
</UL>

<P><STRONG><a name="[43]"></a>Field_Mod8</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, scu.o(.text.Field_Mod8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Field_Mod8
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_toggleAPCLK_SET
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setfSYStofPLL
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setNormalMode
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_resetPllLockDetection
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setOscTrim
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setPrescalerMode
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setK1divToOne
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setfSYStoLPCLK
</UL>

<P><STRONG><a name="[4c]"></a>PLL_setfSYStoLPCLK</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, scu.o(.text.PLL_setfSYStoLPCLK))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PLL_setfSYStoLPCLK &rArr; SCU_ClosePASSWD &rArr; Field_Wrt8all
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClosePASSWD
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_OpenPASSWD
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Mod8
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
</UL>

<P><STRONG><a name="[44]"></a>PLL_setK1divToOne</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, scu.o(.text.PLL_setK1divToOne))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PLL_setK1divToOne &rArr; SCU_ClosePASSWD &rArr; Field_Wrt8all
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClosePASSWD
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_OpenPASSWD
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Mod8
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
</UL>

<P><STRONG><a name="[4a]"></a>PLL_setPrescalerMode</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, scu.o(.text.PLL_setPrescalerMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PLL_setPrescalerMode &rArr; Field_Mod8
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Mod8
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
</UL>

<P><STRONG><a name="[49]"></a>PLL_setOscTrim</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, scu.o(.text.PLL_setOscTrim))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PLL_setOscTrim &rArr; SCU_ClosePASSWD &rArr; Field_Wrt8all
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClosePASSWD
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_OpenPASSWD
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Mod8
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
</UL>

<P><STRONG><a name="[47]"></a>PLL_setNdivFromConfigWizard</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, scu.o(.text.PLL_setNdivFromConfigWizard))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PLL_setNdivFromConfigWizard &rArr; SCU_ClosePASSWD &rArr; Field_Wrt8all
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClosePASSWD
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_OpenPASSWD
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
</UL>

<P><STRONG><a name="[4b]"></a>PLL_setVcoselK2divFromConfigWizard</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, scu.o(.text.PLL_setVcoselK2divFromConfigWizard))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PLL_setVcoselK2divFromConfigWizard &rArr; SCU_ClosePASSWD &rArr; Field_Wrt8all
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClosePASSWD
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_OpenPASSWD
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
</UL>

<P><STRONG><a name="[42]"></a>PLL_resetPllLockDetection</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, scu.o(.text.PLL_resetPllLockDetection))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PLL_resetPllLockDetection &rArr; Field_Mod8
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Mod8
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
</UL>

<P><STRONG><a name="[4e]"></a>PLL_waitForPllLock</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, scu.o(.text.PLL_waitForPllLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PLL_waitForPllLock &rArr; u1_Field_Rd8
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u1_Field_Rd8
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
</UL>

<P><STRONG><a name="[48]"></a>PLL_setNormalMode</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, scu.o(.text.PLL_setNormalMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PLL_setNormalMode &rArr; Field_Mod8
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Mod8
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
</UL>

<P><STRONG><a name="[4d]"></a>PLL_setfSYStofPLL</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, scu.o(.text.PLL_setfSYStofPLL))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PLL_setfSYStofPLL &rArr; SCU_ClosePASSWD &rArr; Field_Wrt8all
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClosePASSWD
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_OpenPASSWD
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Mod8
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
</UL>

<P><STRONG><a name="[58]"></a>Field_Wrt8all</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, scu.o(.text.Field_Wrt8all))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Field_Wrt8all
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClosePASSWD
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_OpenPASSWD
</UL>

<P><STRONG><a name="[59]"></a>SCU_toggleAPCLK_SET</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, scu.o(.text.SCU_toggleAPCLK_SET))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SCU_toggleAPCLK_SET &rArr; SCU_ClosePASSWD &rArr; Field_Wrt8all
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMSIS_NOP
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClosePASSWD
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_OpenPASSWD
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Mod8
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
</UL>

<P><STRONG><a name="[45]"></a>SCU_OpenPASSWD</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, scu.o(.text.SCU_OpenPASSWD))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SCU_OpenPASSWD &rArr; Field_Wrt8all
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Wrt8all
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_toggleAPCLK_SET
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setfSYStofPLL
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setVcoselK2divFromConfigWizard
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setNdivFromConfigWizard
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setOscTrim
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setK1divToOne
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setfSYStoLPCLK
</UL>

<P><STRONG><a name="[46]"></a>SCU_ClosePASSWD</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, scu.o(.text.SCU_ClosePASSWD))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SCU_ClosePASSWD &rArr; Field_Wrt8all
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Wrt8all
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_toggleAPCLK_SET
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setfSYStofPLL
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setVcoselK2divFromConfigWizard
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setNdivFromConfigWizard
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setOscTrim
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setK1divToOne
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_setfSYStoLPCLK
</UL>

<P><STRONG><a name="[5a]"></a>CMSIS_Irq_En</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scu.o(.text.CMSIS_Irq_En))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClkInit
</UL>

<P><STRONG><a name="[4f]"></a>u1_Field_Rd8</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, scu.o(.text.u1_Field_Rd8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = u1_Field_Rd8
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_waitForPllLock
</UL>

<P><STRONG><a name="[5b]"></a>CMSIS_NOP</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scu.o(.text.CMSIS_NOP))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_toggleAPCLK_SET
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, startup_tle987x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_tle987x.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>UART2_Send_Byte</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, uart.o(.text.UART2_Send_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART2_Send_Byte &rArr; UART2_Buffer_Set &rArr; Field_Wrt8
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Buffer_Set
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_TX_Int_Clr
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stdout_putchar
</UL>

<P><STRONG><a name="[6f]"></a>UART2_isByteTransmitted</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, uart.o(.text.UART2_isByteTransmitted))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART2_isByteTransmitted &rArr; UART2_TX_Sts &rArr; u1_Field_Rd8
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_TX_Sts
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stdout_putchar
</UL>

<P><STRONG><a name="[6c]"></a>UART2_TX_Int_Clr</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, uart.o(.text.UART2_TX_Int_Clr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART2_TX_Int_Clr &rArr; Field_Wrt8
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Wrt8
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Send_Byte
</UL>

<P><STRONG><a name="[69]"></a>UART2_Buffer_Set</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, uart.o(.text.UART2_Buffer_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART2_Buffer_Set &rArr; Field_Wrt8
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Wrt8
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Send_Byte
</UL>

<P><STRONG><a name="[6d]"></a>UART2_TX_Sts</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, uart.o(.text.UART2_TX_Sts))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART2_TX_Sts &rArr; u1_Field_Rd8
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u1_Field_Rd8
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_isByteTransmitted
</UL>

<P><STRONG><a name="[6a]"></a>Field_Wrt8</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, uart.o(.text.Field_Wrt8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Field_Wrt8
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Buffer_Set
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_TX_Int_Clr
</UL>

<P><STRONG><a name="[6e]"></a>u1_Field_Rd8</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, uart.o(.text.u1_Field_Rd8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = u1_Field_Rd8
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_TX_Sts
</UL>

<P><STRONG><a name="[2e]"></a>ADC1_ANON_Set</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, adc1.o(.text.ADC1_ANON_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ADC1_ANON_Set &rArr; Field_Mod32
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Mod32
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Init
</UL>

<P><STRONG><a name="[3a]"></a>ADC1_Power_On</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, adc1.o(.text.ADC1_Power_On))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ADC1_Power_On &rArr; Field_Mod32
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Mod32
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Init
</UL>

<P><STRONG><a name="[2f]"></a>Field_Mod32</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, adc1.o(.text.Field_Mod32))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Field_Mod32
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Power_On
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_ANON_Set
</UL>

<P><STRONG><a name="[33]"></a>u1_Field_Rd32</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, adc1.o(.text.u1_Field_Rd32))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = u1_Field_Rd32
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_GetEIMResult
</UL>

<P><STRONG><a name="[34]"></a>u16_Field_Rd32</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, adc1.o(.text.u16_Field_Rd32))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = u16_Field_Rd32
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_GetEIMResult
</UL>

<P><STRONG><a name="[37]"></a>ADC1_VDH_Attenuator_Range_Get</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, adc1.o(.text.ADC1_VDH_Attenuator_Range_Get))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC1_VDH_Attenuator_Range_Get &rArr; u8_Field_Rd32
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8_Field_Rd32
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_GetEIMResult_mV
</UL>

<P><STRONG><a name="[36]"></a>u8_Field_Rd32</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, adc1.o(.text.u8_Field_Rd32))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = u8_Field_Rd32
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_VDH_Attenuator_Range_Get
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_GetEIMResult_mV
</UL>

<P><STRONG><a name="[3c]"></a>CCU6_T12_Str_En</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ccu6.o(.text.CCU6_T12_Str_En))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CCU6_T12_Str_En &rArr; Field_Wrt16
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Wrt16
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU6_Init
</UL>

<P><STRONG><a name="[3d]"></a>CCU6_T13_Str_En</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ccu6.o(.text.CCU6_T13_Str_En))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CCU6_T13_Str_En &rArr; Field_Wrt16
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Field_Wrt16
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU6_Init
</UL>

<P><STRONG><a name="[40]"></a>Field_Wrt16</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, ccu6.o(.text.Field_Wrt16))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Field_Wrt16
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU6_T13_Str_En
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU6_T12_Str_En
</UL>

<P><STRONG><a name="[76]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[75]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[79]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[78]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
